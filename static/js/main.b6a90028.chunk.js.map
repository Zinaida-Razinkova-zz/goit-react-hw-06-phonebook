{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","App.module.css","components/Filter/Filter.module.css","redux/actions.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["module","exports","addContact","createAction","text","payload","id","shortid","generate","deleteButton","changeFilter","ContactForm","state","name","number","handlChange","event","currentTarget","value","setState","handlSubmit","preventDefault","console","log","props","formSubmitHandler","reset","className","styles","formConteiner","onSubmit","this","labelName","htmlFor","inputName","onChange","type","pattern","title","required","buttonAddContact","Component","connect","contact","contacts","dispatch","actions","filter","target","inputFilter","filterContacts","allContacts","string","toLowerCase","includes","onDeleteButton","listContactList","map","listStyle","buttonContactList","onClick","App","appConteiner","createReducer","action","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.b6a90028.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelName\":\"ContactForm_labelName__JM_Ph\",\"inputName\":\"ContactForm_inputName__2DuL8\",\"buttonAddContact\":\"ContactForm_buttonAddContact__2d-qU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listContactList\":\"ContactList_listContactList__1xSFA\",\"listStyle\":\"ContactList_listStyle__3WIZf\",\"buttonContactList\":\"ContactList_buttonContactList__2yLaK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appConteiner\":\"App_appConteiner__QVher\",\"text\":\"App_text__16ASp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputFilter\":\"Filter_inputFilter__3vs4B\"};","import shortid from \"shortid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContact = createAction(\"contacts/addContact\", (text) => {\r\n  return {\r\n    payload: { id: shortid.generate(), ...text },\r\n  };\r\n});\r\nconst deleteButton = createAction(\"contacts/deleteButton\");\r\nconst changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\n// eslint-disable-next-line\r\nexport default { addContact, deleteButton, changeFilter };\r\n","import React, { Component } from \"react\";\r\n// import propTypes from \"prop-types\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../../redux/actions\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handlChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n    // value - это намбер  в форме\r\n  };\r\n\r\n  handlSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(this.state);\r\n\r\n    this.props.formSubmitHandler(this.state);\r\n    this.reset();\r\n    // this.props.onAddContact(this.state);\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <form className={styles.formConteiner} onSubmit={this.handlSubmit}>\r\n          <label className={styles.labelName} htmlFor=\"\">\r\n            Name\r\n            <input\r\n              className={styles.inputName}\r\n              onChange={this.handlChange}\r\n              value={this.state.name}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </label>\r\n          <label className={styles.labelName} htmlFor=\"\">\r\n            Number\r\n            <input\r\n              className={styles.inputName}\r\n              onChange={this.handlChange}\r\n              value={this.state.number}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n              title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n              required\r\n            />\r\n          </label>\r\n          <button className={styles.buttonAddContact} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// ContactForm.propTypes = {\r\n//   onAddContact: propTypes.func.isRequired,\r\n//   name: propTypes.string.isRequired,\r\n//   number: propTypes.string.isRequired,\r\n// };\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contact: state.contacts.contacts,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  formSubmitHandler: (name, number) =>\r\n    dispatch(actions.addContact(name, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\nimport actions from \"../../redux/actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <>\r\n      <label>\r\n        Find contacts by name\r\n        <input\r\n          className={styles.inputFilter}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  // value: propTypes.string.isRequired,\r\n  onChange: propTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.filter,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (event) => dispatch(actions.changeFilter(event.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../../redux/actions\";\r\n\r\nconst ContactList = ({ contacts, onDeleteButton }) => {\r\n  return (\r\n    <>\r\n      <ul className={styles.listContactList}>\r\n        {contacts.map((contact) => (\r\n          <li className={styles.listStyle} key={contact.id}>\r\n            {contact.name + \" : \" + contact.number}\r\n            <button\r\n              className={styles.buttonContactList}\r\n              onClick={() => {\r\n                onDeleteButton(contact.id);\r\n              }}\r\n              // onClick={onDeleteButton}\r\n            >\r\n              Удалить\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: propTypes.array.isRequired,\r\n  onDeleteButton: propTypes.func.isRequired,\r\n};\r\n\r\nconst filterContacts = (allContacts, filter) => {\r\n  const string = filter.toLowerCase();\r\n  return allContacts.filter(({ name }) => name.toLowerCase().includes(string));\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { contacts, filter } }) => ({\r\n  contacts: filterContacts(contacts, filter),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDeleteButton: (id) => dispatch(actions.deleteButton(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React, { Component } from \"react\";\r\nimport ContactForm from \"./components/ContactForm/ContactForm\";\r\nimport Filter from \"./components/Filter/Filter\";\r\nimport ContactList from \"./components/ContactList/ContactList\";\r\nimport styles from \"./App.module.css\";\r\n\r\nclass App extends Component {\r\n  // state = {\r\n  //   contacts: [\r\n  //     { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  //     { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  //     { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  //     { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n  //   ],\r\n  //   filter: \"\",\r\n  // };\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className={styles.appConteiner}>\r\n          <h1 className={styles.text}>Phonebook</h1>\r\n          <ContactForm />\r\n          <h2 className={styles.text}>Contacts</h2>\r\n          <Filter />\r\n          <ContactList />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./actions\";\r\n\r\nconst contacts = createReducer([], {\r\n  [actions.addContact]: (state, action) => [...state, action.payload],\r\n  [actions.deleteButton]: (state, action) =>\r\n    state.filter((contact) => contact.id !== action.payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actions.changeFilter]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\n","import {\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n  // combineReducers,\r\n} from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport contactReducer from \"./reducer\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\n// const rootReducer = combineReducers({ contacts: contactReducer });\r\n\r\n// const persistedReducer = persistReducer(contactsPersistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactReducer),\r\n  },\r\n  middleware: middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line\r\nexport default { store, persistor };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App\";\r\nimport store from \"./redux/store\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}